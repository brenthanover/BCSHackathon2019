{"version":3,"sources":["assets/home_white.svg","history.js","components/GPS/gps.js","components/NFC/nfc.js","components/Maps/maps.js","components/NavBar/navbar.js","components/ResourceList/resourcelistitemdetails.js","components/ResourceList/chip.js","components/ResourceList/resourcelistitem.js","Firebase.js","components/ResourceList/resourcelist.js","home/home.js","admin/admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","React","Component","port","process","PORT","console","log","HttpClient","this","post","aUrl","queryPath","aCallback","anHttpRequest","XMLHttpRequest","onreadystatechange","readyState","status","responseText","data","open","setRequestHeader","send","JSON","stringify","MapsApiKey","Object","classCallCheck","MAPS_API_KEY","MapsRequestHandler","createClass","key","value","_handleGetPlacesQuery","asyncToGenerator","regenerator_default","a","mark","_callee3","lat","lng","requestType","httpClient","_this","wrap","_context3","prev","next","buildGetPlacesQuery","response","concat","abrupt","stop","_x3","_x4","_x5","apply","arguments","toString","_handleGetPlaceDetails","_callee4","placeId","_context4","buildGetPlaceDetailsQuery","_x6","placeid","lat1","lng1","lat2","lng2","Math","PI","deltaLon","deltaLat","sin","cos","atan2","sqrt","styles","container","display","flex","width","height","backgroundColor","padding","fill","title","color","logo","marginRight","marginLeft","path","button","border","textAlign","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","state","text","handleClick","bind","assertThisInitialized","react_default","createElement","style","src","Home","alt","className","onClick","history","push","innerContainer","flexFlow","optionsBar","justifyContent","ResourceListItemDetails","setState","_this2","_this$props","phone","website","schedule","withStyles","theme","chip","_ref","classes","Chip_default","label","isOdd","isExpanded","minHeight","transition","thumbnail","paddingTop","body","fontSize","marginBottom","types","fontStyle","description","distance","bodyControlBar","vacancy","ResourceListItem","require","formatData","getLabel","handleExpand","handleIndividualPlaceClick","place_id","handleGetPlaceDetails","queryResponse","parse","result","formatted_phone_number","opening_hours","weekday_text","infoTag","VACANCY","type","index","name","icon","address","openingHours","distanceTo","toFixed","slice","map","id","resourcelistitemdetails_ResourceListItemDetails","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","scrollContainer","listItem","loading","alignItems","MOCK_INFOTAG","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","dist_default","options","ResourceList","lon","isLoading","queryNearbyResources","setLocation","getLocation","getResources","db","database","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","ref","orderByKey","on","snapshot","shelters","values","val","resource","capacity","occupants","resources","coords","latitude","longitude","handleGetPlacesQuery","window","setTimeout","ret","i","results","length","resultObj","formatted_address","distanceBetweenPoints","geometry","location","sort","b","then","_this3","resourcelist_Loading","changeLocation","List","celled","item","Item","Content","resourcelistitem_ResourceListItem","navbar_Navbar","resourcelist_ResourceList","Admin","setCapacity","setOccupants","setName","decCount","incCount","handleSendTwilio","once","res","_this4","numOfOccupants","update","_this5","App","react_router","exact","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5b4ec4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_white.a4cfe33e.svg\";","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n})\n","import React from 'react';\n\nexport default class GPS extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: 'Go click the button!',\n            lat: undefined,\n            lon: undefined,\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.setLocation = this.setLocation.bind(this);\n    }\n\n    handleClick() {\n        this.getLocation()\n            .then(this.setLocation);\n    }\n\n    getLocation() {\n        return new Promise((resolve, reject) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    resolve(position);\n                }, () => {\n                    reject(\"Geolocation is not supported by this browser.\");\n                });\n            } else {\n                reject(\"Geolocation is not supported by this browser.\");\n            }\n        })\n    }\n\n    setLocation(position) {\n        let text = \"Here's your location: \";\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n        this.setState({text, lat, lon});\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>GPS Page</h1>\n                <button onClick={() => this.handleClick()}>Click me!</button>\n                <p>Text: {this.state.text}</p>\n                <p>Lat: {this.state.lat}</p>\n                <p>Lon: {this.state.lon}</p>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class NFC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>NFC Page</h1>\n        <button onClick={() => this.handleClick('You clicked the button!')}>Click me!</button>\n        <p>Text: {this.state.text}</p>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\n// export const ROOT_URL = \"http://localhost:8080\";\nexport const ROOT_URL = \"\";\nconst port = process.env.PORT || 8080;\nconsole.log('debug: ', port);\n\n/*\nconst requestTypes = {\n  SHELTER: \"shelter\",\n  SAFE_INJECTION_SITE: \"safe%20injection%20site\",\n  PHARMACY: \"pharmacy\",\n  HOSPITAL: \"hospital\",\n  FINANCIAL: \"financial\",\n  LEGAL: \"legal\",\n  FOOD: \"food\",\n};\n*/\n\nconst relevantPlaceTypes = \"(shelter)+OR+(injection)+OR+(pharmacy)+OR+(hospital)+OR+(financial)+OR+(legal)+OR+(food)+OR+(addiction)+OR+(recovery)+OR+(survivor)+OR+(healing)+OR+(health)\";\nconst RADIUS_OF_EARTH = 6371000;   // radius of earth in metres\n\nexport let HttpClient = function() {\n  this.post = function(aUrl, queryPath, aCallback) {\n    let anHttpRequest = new XMLHttpRequest();\n    anHttpRequest.onreadystatechange = function() {\n      if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200){\n        aCallback(anHttpRequest.responseText);\n      }\n    };\n\n    let data = {queryPath: queryPath};\n\n    anHttpRequest.open( \"POST\", aUrl, false );\n    anHttpRequest.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    anHttpRequest.send( JSON.stringify(data));\n  }\n};\n\n\nexport default class Maps extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleIndividualPlaceClick = this.handleIndividualPlaceClick.bind(this);\n  }\n\n  async handleClick(text) {\n    this.setState({ text: text });\n\n    // TODO: here, we should call handleGetPlacesQuery() with a proper lat, lng, and request type.\n    let queryResponse = await MapsRequestHandler.handleGetPlacesQuery(49.267940, -123.247360);\n    console.log(\"Response: \" + queryResponse);\n\n    // This is the response containing the data you want for rendering on the front-end.\n    return queryResponse;\n  }\n\n  async handleIndividualPlaceClick(placeId) {\n\n    // TODO: here, we should call handleGetPlaceDetails() with a proper placeId from our getPlacesQuery.\n    let queryResponse = await MapsRequestHandler.handleGetPlaceDetails(placeId);\n    console.log(\"Response: \" + queryResponse);\n    return queryResponse;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Maps Page</h1>\n        <button onClick={() => this.handleClick('You clicked the button!')}>Get list of nearby places</button>\n        <button onClick={() => this.handleIndividualPlaceClick(\"ChIJv1Ta5shyhlQR_6flUsZ9Vok\")}>Get detailed info for one place</button>\n        <p>Text: {this.state.text}</p>\n      </div>\n    )\n  }\n}\n\nexport class MapsApiKey {\n  static MAPS_API_KEY = \"AIzaSyAsvCrLqQVzefCIIPgvWoVsx_PBpYi8l2c\";\n}\n\nexport class MapsRequestHandler {\n  /**\n   * Given a lat, lng, and requestType (enum): see above, return response.\n   * @param lat\n   * @param lng\n   * @param requestType\n   * @returns {Promise<void>}\n   */\n  static async handleGetPlacesQuery(lat, lng, requestType) {\n    let queryPath = this.buildGetPlacesQuery(lat, lng, requestType);\n    console.log(queryPath, lat, lng);\n\n    let httpClient = new HttpClient();\n    this.response = null;\n    let _this = this;\n\n    await httpClient.post(`${ROOT_URL}/placesRequest`, queryPath, function(response) {\n      // I could work with the result html/json here.  I could also just return it\n      console.log(\"Returning result handleGetPlacesQuery()\");\n      _this.response = response;\n    });\n\n    return _this.response;\n  }\n\n  /**\n   *  Returns the URL required for a \"get places\" query.\n   */\n  static buildGetPlacesQuery(lat, lng) {\n    return \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n        + \"?query=\" + relevantPlaceTypes\n        + \"&language=en\"\n        + \"&fields=formatted_address,geometry,icon,id,name,permanently_closed,photos,place_id,plus_code,types,user_ratings_total,price_level,rating,opening_hours\"\n        + \"&location=\" + lat.toString() + \",\" + lng.toString()\n        + \"&key=\" + MapsApiKey.MAPS_API_KEY\n        + \"&radius=12000\";\n  }\n\n  /**\n   * Given a placeid (retrieved from a separate \"get places\" query), return contact information for that one place.\n   * @param placeid\n   * @returns {string}\n   */\n  static async handleGetPlaceDetails(placeId) {\n    let queryPath = this.buildGetPlaceDetailsQuery(placeId);\n\n    console.log(queryPath);\n\n    let httpClient = new HttpClient();\n    this.response = null;\n    let _this = this;\n\n    await httpClient.post(`${ROOT_URL}/placeDetailsRequest`, queryPath, function(response) {\n      // I could work with the result html/json here.  I could also just return it\n      console.log(\"Returning result handleGetPlaceDetails()\");\n      _this.response = response;\n    });\n\n    return _this.response;\n  }\n\n  static buildGetPlaceDetailsQuery(placeid) {\n    return \"https://maps.googleapis.com/maps/api/place/details/json\"\n        + \"?key=\" + MapsApiKey.MAPS_API_KEY\n        + \"&placeid=\" + placeid\n        + \"&language=en\"\n        + \"&fields=formatted_phone_number,international_phone_number,opening_hours,website\"\n  }\n\n  /**\n   * Returns distance (in km) between two points represented by lat1,lng1 and lat2,lng2\n   * Implementation from CPSC210 (Paul Carter)\n   * @param lat1\n   * @param lng1\n   * @param lat2\n   * @param lng2\n   * @returns {number}\n   */\n  static distanceBetweenPoints(lat1, lng1, lat2, lng2) {\n    lat1 = lat1 / 180.0 * Math.PI;\n    lat2 = lat2 / 180.0 * Math.PI;\n    const deltaLon = (lng1 - lng2) / 180.0 * Math.PI;\n    const deltaLat = (lat1 - lat2) / 180.0 * Math.PI;\n\n    const a = Math.sin(deltaLat / 2.0) * Math.sin(deltaLat / 2.0)\n        + Math.cos(lat1) * Math.cos(lat2)\n        * Math.sin(deltaLon / 2.0) * Math.sin(deltaLon / 2.0);\n    const c = 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return c * RADIUS_OF_EARTH;\n  }\n}\n","import './navbar.css';\nimport React from 'react';\nimport history from '../../history';\nimport Home from '../../assets/home_white.svg';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 'none',\n    width: '100%',\n    height: 'min-content',\n    backgroundColor: '#428ec1',\n    padding: '0.5rem',\n    fill: '#FFF'\n  },\n  title: {\n    color: '#FFFFFF'\n  },\n  logo: {\n    marginRight: '1rem',\n    marginLeft: '0.5rem',\n    height: '1.5rem',\n    color: '#FFFFFF',\n    fill: '#FFF',\n    path: {\n      fill: '#FFF'\n    }\n  },\n  button: {\n    padding: '1px 32px',\n    height: '2rem',\n    backgroundColor: '#428ec1',\n    border: '1px solid white',\n    color: 'white',\n    textAlign: 'center',\n    marginLeft: '6px',\n  }\n};\n\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick() {\n    // let httpClient = new HttpClient();\n    // this.response = null;\n    //\n    // await httpClient.post(`${ROOT_URL}/twilio`);\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <img style={styles.logo} src={Home} alt=\"logo\" className=\"home-logo\" />\n        <h1 style={styles.title}>Haven App</h1>\n\n        <button style={styles.button} onClick={() => history.push('/')}>main</button>\n        <button style={styles.button} onClick={() => history.push('/admin')}>admin</button>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 'none',\n    height: 'min-content',\n    width: '100%',\n    //backgroundColor: '#FFFFFF',\n    padding: '0.5rem'\n  },\n  innerContainer: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n  },\n  optionsBar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end'\n  }\n};\n\nexport default class ResourceListItemDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    const {\n      phone,\n      website,\n      schedule\n    } = this.props;\n\n    return (\n      <div style={styles.container}>\n        <div style={styles.innerContainer}>\n          <h1>Resource Details/ schedule</h1>\n          <p>{phone}</p>\n          <p>{website}</p>\n          <p>{schedule}</p>\n\n          <div style={styles.optionsBar}>\n            <button onClick={() => this.handleClick('You clicked the button!')}>Admin Panel!</button>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst MUIstyles = theme => ({\n  chip: {\n    marginRight: 4,\n    border: '1px solid #4b96f1',\n    backgroundColor: 'transparent',\n    color: '#3d7ac4',\n    height: '1.5rem'\n  },\n});\n\nconst NewChip = ({ text, classes }) => (\n  <Chip label={text} className={classes.chip} />\n);\n\nexport default withStyles(MUIstyles)(NewChip);\n","import React from 'react';\nimport ResourceListItemDetails from './resourcelistitemdetails';\nimport Chip from './chip';\nimport Lottie from 'react-lottie';\nimport {MapsRequestHandler} from '../Maps/maps';\n\nconst LIST_BLUE = '#eceef9';\nconst LIST_WHITE = '#FFFFFF';\n\nconst styles = {\n  container: (isOdd, isExpanded) => ({\n    display: 'flex',\n    flexFlow: 'column',\n    flex: 'none',\n    width: '100%',\n    // height: ''\n    minHeight: isExpanded ? '20rem' : 'auto',\n    backgroundColor: isOdd ? LIST_BLUE : LIST_WHITE,\n    transition: 'all 0.05s ease-in-out'\n  }),\n  thumbnail: {\n    width: '8rem',\n    height: '100%',\n    paddingTop: '1rem',\n    textAlign: 'center',\n  },\n\n  innerContainer: {\n    display: 'flex',\n    flex: 'none',\n    width: '100%',\n    height: 'min-content',\n  },\n\n  // Body Styles\n  body: {\n    display: 'flex',\n    flexFlow: 'column',\n    height: '100%',\n    width: '100%',\n    padding: '0.5rem'\n  },\n  title: {\n    fontSize: '12pt',\n    marginBottom: 4,\n  },\n  types: {\n    fontStyle: 'italic',\n    fontSize: '10pt',\n    marginBottom: 4,\n  },\n  description: {\n    fontSize: '10pt',\n    fontStyle: 'italic',\n    marginBottom: 4,\n  },\n\n  distance: {\n    fontSize: '10pt',\n    fontStyle: 'italic',\n  },\n  bodyControlBar: {\n    display: 'flex',\n    height: '1rem',\n    justifyContent: 'flex-end'\n  },\n\n  // labels\n  vacancy: (status) => ({\n    display: 'flex',\n    flexFlow: 'row',\n    color: (status === 'FULL') ? 'red' : 'green'\n  }),\n  label: {\n    fontSize: '10pt'\n  }\n};\n\nconst MOCK_ITEM_DETAILS = {\n  phone: \"(604) 827-2584\",\n  schedule:[\n    \"Monday: 9:00 AM – 4:00 PM\",\n    \"Tuesday: 9:00 AM – 4:00 PM\",\n    \"Wednesday: 9:00 AM – 4:00 PM\",\n    \"Thursday: 9:00 AM – 4:00 PM\",\n    \"Friday: 9:00 AM – 4:00 PM\",\n    \"Saturday: Closed\",\n    \"Sunday: Closed\"\n  ],\n  website: \"http://pharmsci.ubc.ca/pharmacists-clinic\",\n};\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: require('./loading_2.json'),\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\n\nconst Loading = () => (\n  <div style={styles.loading}>\n    <Lottie options={defaultOptions}\n            height=\"100%\"\n            width=\"100%\"/>\n  </div>\n);\n\nexport default class ResourceListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      phone: \"(604) 827-2584\",\n      schedule:[\n        \"Monday: 9:00 AM – 4:00 PM\",\n        \"Tuesday: 9:00 AM – 4:00 PM\",\n        \"Wednesday: 9:00 AM – 4:00 PM\",\n        \"Thursday: 9:00 AM – 4:00 PM\",\n        \"Friday: 9:00 AM – 4:00 PM\",\n        \"Saturday: Closed\",\n        \"Sunday: Closed\"\n      ],\n      website: \"http://pharmsci.ubc.ca/pharmacists-clinic\"\n    };\n\n    this.formatData = this.formatData.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.handleExpand = this.handleExpand.bind(this);\n    this.handleIndividualPlaceClick = this.handleIndividualPlaceClick.bind(this);\n  }\n\n  async handleIndividualPlaceClick(isExpanded) {\n    // TODO: here, we should call handleGetPlaceDetails() with a proper placeId from our getPlacesQuery.\n    const { place_id } = this.props;\n    let queryResponse = await MapsRequestHandler.handleGetPlaceDetails(place_id);\n    console.log(\"Response: \" + queryResponse);\n    this.setState({ data: this.formatData(JSON.parse(queryResponse).data), isExpanded: !isExpanded });\n    return queryResponse;\n  }\n\n  /**\n   * Formats data from queryNearbyResources() to a more flattened structure\n   * ASSUME: data is from a successful response\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    console.log('data is ', data);\n    let resultObj = {\n      isExpanded: true,\n      phone: data.result.formatted_phone_number,\n      schedule: data.result.opening_hours ? data.result.opening_hours.weekday_text : 'Hours unavailable',\n      website: data.result.website\n    };\n    return resultObj\n  }\n\n  handleExpand(isExpanded) {\n    this.handleIndividualPlaceClick(isExpanded);\n  }\n\n  getLabel() {\n    const { infoTag } = this.props;\n\n    return {\n      VACANCY: <span style={styles.vacancy(infoTag.label)}><p style={styles.label}>{infoTag.label} {infoTag.value}</p></span>\n    }[infoTag.type]\n  }\n\n  render() {\n    const {\n      index,\n      name,\n      icon,\n      address,\n      openingHours,\n      types,\n      infoTag,\n      distanceTo\n    }  = this.props;\n\n    return (\n      <div style={styles.container(index % 2, this.state.isExpanded)} onClick={() => this.handleExpand(this.state.isExpanded)}>\n        <div style={styles.innerContainer}>\n          <div style={styles.thumbnail}>\n            <img src={icon} alt={\"icon\"}/>\n            <p style={styles.distance}>{distanceTo.toFixed(2)} km</p>\n          </div>\n          <div style={styles.body}>\n            <h3 style={styles.title}>{name}</h3>\n            <div style={styles.types}>{\n              types.slice(0, 3).map((type, id) => <Chip key={id} text={type}/>)\n            }</div>\n            <p style={styles.description}>{address}</p>\n            <div style={styles.bodyControlBar}>\n              {this.getLabel()}\n            </div>\n          </div>\n        </div>\n\n        {this.state.isExpanded && <ResourceListItemDetails\n          schedule={this.state.schedule}\n          phone={this.state.phone}\n          website={this.state.website}\n          index={index} />}\n      </div>\n    )\n  }\n}\n","const firebase = require('firebase/app');\nrequire('firebase/database');\n\nconst config = {\n    apiKey: \"AIzaSyCNmaSPCktKr5T-Stq6mL3wlnIuJ9xD-Ss\",\n    authDomain: \"bcs-hackathon-2019.firebaseapp.com\",\n    databaseURL: \"https://bcs-hackathon-2019.firebaseio.com\",\n    projectId: \"bcs-hackathon-2019\",\n    storageBucket: \"bcs-hackathon-2019.appspot.com\",\n    messagingSenderId: \"473934570743\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\n","import './resourcelist.css';\nimport React from 'react';\nimport { List } from 'semantic-ui-react';\nimport Lottie from 'react-lottie';\nimport ResourceListItem from './resourcelistitem';\nimport {MapsRequestHandler} from '../Maps/maps';\nimport history from \"../../history\";\n\nimport firebase from '../../Firebase';\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column',\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  scrollContainer: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n    height: 'min-content'\n  },\n  listItem: {\n    padding: 0\n    // borderBottom: '1px solid #c1c1c1'\n  },\n  loading: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: '1rem',\n    paddingTop: '2rem'\n  },\n  button: {\n    padding: '1px 32px',\n    height: '2rem',\n    backgroundColor: '#428ec1',\n    border: '1px solid white',\n    color: 'white',\n    textAlign: 'center',\n  }\n};\n\nconst MAX_ITEMS = 6;\nconst LOADING_DELAY = 2500;\n\nconst requestTypes = {\n  SHELTER: \"shelter\",\n  SAFE_INJECTION_SITE: \"safe%20injection%20site\",\n  PHARMACY: \"pharmacy\",\n  HOSPITAL: \"hospital\"\n};\n\nconst relevantPlaceTypes = \"(shelter)+OR+(injection)+OR+(pharmacy)+OR+(hospital)+OR+(financial)+OR+(legal)+OR+(food)+OR+(addiction)+OR+(recovery)+OR+(survivor)+OR+(healing)+OR+(health)\";\nconst RADIUS_OF_EARTH = 6371000;   // radius of earth in metres\n\nconst MOCK_INFOTAG = { type: 'VACANCY', label: 'VACANT', value: '132/200' };\n\nconst MOCK_ITEMS = [\n  {\n    name: \"Shoppers Drug Mart\",\n    icon: \"https://maps.gstatic.com/mapfiles/place_api/icons/shopping-71.png\",\n    formatted_address: \"Dentistry Bldg, 5940 University Blvd, Vancouver, BC V6T 1Z3, Canada\",\n    opening_hours: {\n      open_now: true\n    },\n    types: [\n      \"pharmacy\",\n      \"store\",\n      \"health\",\n      \"point_of_interest\",\n      \"establishment\"\n    ],\n    infoTag: MOCK_INFOTAG\n  }\n];\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: require('./loading.json'),\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\n\nconst Loading = () => (\n  <div style={styles.loading}>\n    <Lottie options={defaultOptions}\n            height=\"100%\"\n            width=\"100%\"/>\n  </div>\n);\n\nexport default class ResourceList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lat: 49.267940,\n      lon: -123.247360,\n      data: [],\n      isLoading: false\n    };\n\n    this.queryNearbyResources = this.queryNearbyResources.bind(this);\n    this.setLocation = this.setLocation.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.formatData = this.formatData.bind(this);\n    this.getResources = this.getResources.bind(this);\n\n    this.db = firebase.database();\n\n    this.getResources();\n  }\n\n  getLocation() {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          resolve(position);\n        }, () => {\n          console.log('error1');\n          reject(\"Geolocation is not supported by this browser.\");\n        });\n      } else {\n        console.log('error2');\n        reject(\"Geolocation is not supported by this browser.\");\n      }\n    })\n      \n    \n  }\n\n  getResources() {\n    let resourceType = \"Shelters\";\n    this.db.ref(`/${resourceType}`).orderByKey().on(\"value\", function (snapshot){\n      let resources = Object.values(snapshot.val());\n      let shelters = resources.map((resource) => {\n          return {\n            title: resource.name,\n            description: \"This is a Shelter\",\n            infoTag: {\n              type: \"VACANCY\",\n              label: (resource.capacity > resource.occupants) ? \"VACANT\" : \"FULL\",\n              value: `${resource.occupants}/${resource.capacity}`\n            }\n          }\n      })\n      this.setState({resources: shelters});\n    }.bind(this));\n  }\n\n  setLocation(position) {\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    this.setState({ lat, lon });\n  }\n\n  async queryNearbyResources() {\n    // TODO: here, we should call handleGetPlacesQuery() with a proper lat, lng, and request type.\n    let queryResponse = await MapsRequestHandler.handleGetPlacesQuery(this.state.lat, this.state.lon);\n    console.log('resources are ', queryResponse);\n\n    this.setState({ data: this.formatData(JSON.parse(queryResponse).data)});\n\n    window.setTimeout(() => {\n      this.setState({ isLoading: false })\n    }, LOADING_DELAY);\n    return this.formatData(JSON.parse(queryResponse).data);\n  }\n\n  /**\n   * Formats data from queryNearbyResources() to a more flattened structure\n   * ASSUME: data is from a successful response\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    let ret = [];\n    for (let i = 0; i < data.results.length; ++i) {\n      let result = data.results[i];\n      let resultObj = {\n        name: result.name,\n        icon: result.icon,\n        formatted_address: result.formatted_address,\n        opening_hours: result.opening_hours,\n        types: result.types,\n        place_id: result.place_id,\n        distanceTo: ResourceList.distanceBetweenPoints(result.geometry.location.lat, result.geometry.location.lng, this.state.lat, this.state.lon),\n        infoTag: MOCK_INFOTAG,\n      };\n      ret.push(resultObj);\n    }\n\n    ret.sort(function(a, b) {\n      return a.distanceTo - b.distanceTo;\n    });\n    return ret;\n  }\n\n  /**\n   * Returns distance (in km) between two points represented by lat1,lng1 and lat2,lng2\n   * Implementation from CPSC210 (Paul Carter)\n   * @param lat1\n   * @param lng1\n   * @param lat2\n   * @param lng2\n   * @returns {number}\n   */\n  static distanceBetweenPoints(lat1, lng1, lat2, lng2) {\n    lat1 = lat1 / 180.0 * Math.PI;\n    lat2 = lat2 / 180.0 * Math.PI;\n    const deltaLon = (lng1 - lng2) / 180.0 * Math.PI;\n    const deltaLat = (lat1 - lat2) / 180.0 * Math.PI;\n\n    const a = Math.sin(deltaLat / 2.0) * Math.sin(deltaLat / 2.0)\n      + Math.cos(lat1) * Math.cos(lat2)\n      * Math.sin(deltaLon / 2.0) * Math.sin(deltaLon / 2.0);\n    const c = 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return c * RADIUS_OF_EARTH / 1000; // in km\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    this.getLocation()\n      .then(this.setLocation)\n      .then(this.queryNearbyResources);\n  }\n\n  changeLocation() {\n    console.log(\"Changing location...\");\n\n    let position;\n    if (this.state.lat === 49.281388) {\n      position = {\n        coords: {\n          latitude: 49.267940,\n          longitude: -123.247360,\n        }\n      }\n    } else {\n      position = {\n        coords: {\n          latitude: 49.281388,\n          longitude: -123.095661,\n        }\n      };\n    }\n    this.setLocation(position);\n    this.queryNearbyResources();\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.scrollContainer}>\n        { this.state.isLoading && <Loading /> }\n        { !this.state.isLoading && <div style={styles.scrollContainer}>\n          <button style={styles.button} onClick={() => this.changeLocation()}>Toggle location</button>\n          <List celled>\n            {this.state.data.slice(0, MAX_ITEMS).map((item, id) => (\n              <List.Item key={id} style={styles.listItem}>\n                <List.Content>\n                  <ResourceListItem\n                    index={id}\n                    name={item.name}\n                    icon={item.icon}\n                    address={item.formatted_address}\n                    openingHours={item.opening_hours}\n                    types={item.types}\n                    place_id={item.place_id}\n                    infoTag={item.infoTag}\n                    distanceTo={item.distanceTo}\n                  />\n                </List.Content>\n              </List.Item>\n            ))}\n          </List>\n        </div>}\n      </div>\n      </div>\n    )\n  }\n}","import './home.css';\nimport React from 'react';\nimport { NavBar, ResourceList } from '../components';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 'none',\n    flexFlow: 'column',\n    height: '100%',\n    width: '100%'\n  }\n};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <NavBar />\n        <ResourceList />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Navbar from '../components/NavBar/navbar';\nimport firebase from \"../Firebase\";\nimport {HttpClient, ROOT_URL} from '../components/Maps/maps';\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexFlow: 'column',\n        width: '100%',\n        height: '100%'\n    }\n};\n\nexport default class Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            occupants: 0,\n            capacity: 0\n        };\n\n        this.setCapacity = this.setCapacity.bind(this);\n        this.setOccupants = this.setOccupants.bind(this);\n        this.setName = this.setName.bind(this);\n        this.decCount = this.decCount.bind(this);\n        this.decCount = this.decCount.bind(this);\n        this.decCount = this.decCount.bind(this);\n        this.incCount = this.incCount.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSendTwilio = this.handleSendTwilio.bind(this);\n        this.db = firebase.database();\n        this.setName();\n        this.setCapacity();\n        this.setOccupants();\n    }\n\n    setCapacity() {\n      this.db.ref(`/Shelters/Shelter1`).once('value').then((res) => {\n          let capacity = res.val().capacity;\n          this.setState({capacity});\n      });\n    }\n\n    setOccupants() {\n      this.db.ref(`/Shelters/Shelter1`).once('value').then((res) => {\n          let occupants = res.val().occupants;\n          this.setState({occupants});\n      });\n    }\n\n    setName() {\n        this.db.ref(`/Shelters/Shelter1`).once('value').then((res) => {\n            let name = res.val().name;\n            this.setState({name});\n        });\n    }\n\n    incCount() {\n        let numOfOccupants = this.state.occupants;\n        if (this.state.occupants >= this.state.capacity) {\n            // No!!!\n        } else {\n            numOfOccupants++;\n            this.setState({occupants: numOfOccupants});\n            this.db.ref('Shelters/Shelter1').update({occupants: numOfOccupants})\n                .then(() => {\n                    console.log(\"Success!\");\n                });\n        }\n    }\n\n    decCount() {\n        let numOfOccupants = this.state.occupants;\n        if (this.state.occupants <= 0) {\n            // No!!!\n        } else {\n            numOfOccupants--;\n            this.setState({occupants: numOfOccupants});\n            this.db.ref('Shelters/Shelter1').update({occupants: numOfOccupants})\n                .then(() => {\n                    console.log(\"Success!\");\n                });\n        }\n    }\n\n    handleClick(text) {\n        this.setState({text: text});\n\n        this.firebase.database().ref('/Shelters/Shelter1').once('value').then((res) => {\n            console.log('Shelter name:', res.val().name);\n            console.log('Shelter location:', res.val().location);\n            console.log('Shelter capacity:', res.val().capacity);\n            console.log('Current number of occupants:', res.val().occupants);\n        });\n    }\n\n    async handleSendTwilio() {\n    console.log('here');\n      let httpClient = new HttpClient();\n      this.response = null;\n\n      await httpClient.post(`${ROOT_URL}/twilio`);\n      console.log('done');\n    }\n\n    render() {\n        return (\n            <div style={styles.container}>\n                <Navbar/>\n                <h1>Admin Page</h1>\n                <p>Current Shelter: {this.state.name}</p>\n                <p>Current number of Occupants: {this.state.occupants}</p>\n                <p>Current capacity: {this.state.capacity}</p>\n                <button onClick={() => this.incCount()}>Inc Count</button>\n                <button onClick={() => this.decCount()}>Dec Count</button>\n                {/*<div style={{ border: '1px solid black', marginTop: '2rem'}} onClick={this.handleSendTwilio}>Send Notification</div>*/}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport history from './history';\n\nimport Home from './home/home';\nimport Admin from './admin/admin';\nimport Maps from './components/Maps/maps';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column'\n  }\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Route exact path={\"/\"} component={Home}/>\n          <Route exact path={\"/admin\"} component={Admin}/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}