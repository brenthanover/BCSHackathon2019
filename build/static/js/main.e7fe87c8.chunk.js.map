{"version":3,"sources":["assets/home_white.svg","history.js","components/GPS/gps.js","components/NFC/nfc.js","components/Maps/maps.js","components/NavBar/navbar.js","components/ResourceList/resourcelistitemdetails.js","components/ResourceList/chip.js","components/ResourceList/resourcelistitem.js","components/ResourceList/resourcelist.js","home/home.js","admin/admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","React","Component","requestTypes","HttpClient","this","post","aUrl","queryPath","aCallback","anHttpRequest","XMLHttpRequest","onreadystatechange","readyState","status","responseText","data","open","setRequestHeader","send","JSON","stringify","Maps","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","text","handleClick","bind","assertThisInitialized","handleIndividualPlaceClick","setState","MapsRequestHandler","handleGetPlacesQuery","queryResponse","console","log","placeId","handleGetPlaceDetails","_this2","react_default","a","createElement","onClick","MapsApiKey","MAPS_API_KEY","createClass","key","value","_handleGetPlacesQuery","asyncToGenerator","regenerator_default","mark","_callee3","lat","lng","requestType","httpClient","wrap","_context3","prev","next","buildGetPlacesQuery","response","concat","abrupt","stop","_x3","_x4","_x5","apply","arguments","toString","_handleGetPlaceDetails","_callee4","_context4","buildGetPlaceDetailsQuery","_x6","placeid","styles","container","display","width","height","backgroundColor","padding","fill","title","color","logo","marginRight","marginLeft","path","Navbar","style","src","Home","alt","className","history","push","innerContainer","flexFlow","optionsBar","justifyContent","ResourceListItemDetails","withStyles","theme","chip","border","_ref","classes","Chip_default","label","isOdd","isExpanded","transition","thumbnail","body","fontSize","marginBottom","types","fontStyle","description","bodyControlBar","vacancy","ResourceListItem","phone","schedule","website","getLabel","handleExpand","infoTag","VACANCY","type","_this$props","index","name","address","icon","openingHours","slice","map","id","resourcelistitemdetails_ResourceListItemDetails","flex","scrollContainer","listItem","MOCK_INFOTAG","MOCK_ITEM","formatted_address","opening_hours","open_now","MOCK_ITEMS","ResourceList","lon","queryNearbyResources","setLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getLocation","then","List","celled","item","Item","Content","resourcelistitem_ResourceListItem","navbar_Navbar","resourcelist_ResourceList","firebase","require","Admin","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","ref","once","res","location","capacity","occupants","App","react_router","exact","component","maps_Maps","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7fe87c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_white.a4cfe33e.svg\";","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n})\n","import React from 'react';\n\nexport default class GPS extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: 'Go click the button!',\n            lat: undefined,\n            lon: undefined,\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.setLocation = this.setLocation.bind(this);\n    }\n\n    handleClick() {\n        this.getLocation()\n            .then(this.setLocation);\n    }\n\n    getLocation() {\n        return new Promise((resolve, reject) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    resolve(position);\n                }, () => {\n                    reject(\"Geolocation is not supported by this browser.\");\n                });\n            } else {\n                reject(\"Geolocation is not supported by this browser.\");\n            }\n        })\n    }\n\n    setLocation(position) {\n        let text = \"Here's your location: \";\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n        this.setState({text, lat, lon});\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>GPS Page</h1>\n                <button onClick={() => this.handleClick()}>Click me!</button>\n                <p>Text: {this.state.text}</p>\n                <p>Lat: {this.state.lat}</p>\n                <p>Lon: {this.state.lon}</p>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class NFC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>NFC Page</h1>\n        <button onClick={() => this.handleClick('You clicked the button!')}>Click me!</button>\n        <p>Text: {this.state.text}</p>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\n// const ROOT_URL = \"http://localhost:8080\";\nconst ROOT_URL = \"\";\n\nconst requestTypes = {\n  SHELTER: \"shelter\",\n  SAFE_INJECTION_SITE: \"safe%20injection%20site\",\n  PHARMACY: \"pharmacy\",\n  HOSPITAL: \"hospital\"\n};\n\nlet HttpClient = function() {\n  this.post = function(aUrl, queryPath, aCallback) {\n    let anHttpRequest = new XMLHttpRequest();\n    anHttpRequest.onreadystatechange = function() {\n      if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200){\n        aCallback(anHttpRequest.responseText);\n      }\n    };\n\n    let data = {queryPath: queryPath};\n\n    anHttpRequest.open( \"POST\", aUrl, false );\n    anHttpRequest.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    anHttpRequest.send( JSON.stringify(data));\n  }\n};\n\nexport default class Maps extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleIndividualPlaceClick = this.handleIndividualPlaceClick.bind(this);\n  }\n\n  async handleClick(text) {\n    this.setState({ text: text });\n\n    // TODO: here, we should call handleGetPlacesQuery() with a proper lat, lng, and request type.\n    let queryResponse = await MapsRequestHandler.handleGetPlacesQuery(49.267940, -123.247360, requestTypes.SAFE_INJECTION_SITE);\n    console.log(\"Response: \" + queryResponse);\n\n    // This is the response containing the data you want for rendering on the front-end.\n    return queryResponse;\n  }\n\n  async handleIndividualPlaceClick(placeId) {\n\n    // TODO: here, we should call handleGetPlaceDetails() with a proper placeId from our getPlacesQuery.\n    let queryResponse = await MapsRequestHandler.handleGetPlaceDetails(placeId);\n    console.log(\"Response: \" + queryResponse);\n    return queryResponse;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Maps Page</h1>\n        <button onClick={() => this.handleClick('You clicked the button!')}>Get list of nearby places</button>\n        <button onClick={() => this.handleIndividualPlaceClick(\"ChIJv1Ta5shyhlQR_6flUsZ9Vok\")}>Get detailed info for one place</button>\n        <p>Text: {this.state.text}</p>\n      </div>\n    )\n  }\n}\n\nexport class MapsApiKey {\n  static MAPS_API_KEY = \"AIzaSyAsvCrLqQVzefCIIPgvWoVsx_PBpYi8l2c\";\n}\n\nexport class MapsRequestHandler {\n  /**\n   * Given a lat, lng, and requestType (enum): see above, return response.\n   * @param lat\n   * @param lng\n   * @param requestType\n   * @returns {Promise<void>}\n   */\n  static async handleGetPlacesQuery(lat, lng, requestType) {\n    let queryPath = this.buildGetPlacesQuery(lat, lng, requestType);\n    console.log(queryPath);\n\n    let httpClient = new HttpClient();\n    this.response = null;\n    let _this = this;\n\n    await httpClient.post(`${ROOT_URL}/placesRequest`, queryPath, function(response) {\n      // I could work with the result html/json here.  I could also just return it\n      console.log(\"Returning result handleGetPlacesQuery()\");\n      _this.response = response;\n    });\n\n    return _this.response;\n  }\n\n  /**\n   *  Returns the URL required for a \"get places\" query.\n   */\n  static buildGetPlacesQuery(lat, lng, requestType) {\n    return \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\"\n        + \"?keyword=\" + requestType\n        + \"&inputtype=textquery\"\n        + \"&language=en\"\n        + \"&fields=formatted_address,geometry,icon,id,name,permanently_closed,photos,place_id,plus_code,types,user_ratings_total,price_level,rating,opening_hours\"\n        + \"&location=\" + lat.toString() + \",\" + lng.toString()\n        + \"&key=\" + MapsApiKey.MAPS_API_KEY\n        + \"&radius=12000\";\n  }\n\n  static async handleGetPlaceDetails(placeId) {\n    let queryPath = this.buildGetPlaceDetailsQuery(placeId);\n\n    console.log(queryPath);\n\n    let httpClient = new HttpClient();\n    this.response = null;\n    let _this = this;\n\n    await httpClient.post(`${ROOT_URL}/placeDetailsRequest`, queryPath, function(response) {\n      // I could work with the result html/json here.  I could also just return it\n      console.log(\"Returning result handleGetPlaceDetails()\");\n      _this.response = response;\n    });\n\n    return _this.response;\n  }\n\n  /**\n   * Given a placeid (retrieved from a separate \"get places\" query), return contact information for that one place.\n   * @param placeid\n   * @returns {string}\n   */\n  static buildGetPlaceDetailsQuery(placeid) {\n    return \"https://maps.googleapis.com/maps/api/place/details/json\"\n        + \"?key=\" + MapsApiKey.MAPS_API_KEY\n        + \"&placeid=\" + placeid\n        + \"&language=en\"\n        + \"&fields=formatted_phone_number,international_phone_number,opening_hours,website\"\n  }\n}\n","import './navbar.css';\nimport React from 'react';\nimport history from '../../history';\nimport Home from '../../assets/home_white.svg';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    width: '100%',\n    height: 'min-content',\n    backgroundColor: '#428ec1',\n    padding: '0.5rem',\n    fill: '#FFF'\n  },\n  title: {\n    color: '#FFFFFF'\n  },\n  logo: {\n    marginRight: '1rem',\n    marginLeft: '0.5rem',\n    height: '1.5rem',\n    color: '#FFFFFF',\n    fill: '#FFF',\n    path: {\n      fill: '#FFF'\n    }\n  }\n};\n\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <img style={styles.logo} src={Home} alt=\"logo\" className=\"home-logo\" />\n        <h1 style={styles.title}>Haven App</h1>\n        <button style={{ height: '2rem' }} onClick={() => history.push('/')}>main</button>\n        <button style={{ height: '2rem' }} onClick={() => history.push('/admin')}>admin</button>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    height: 'min-content',\n    width: '100%',\n    backgroundColor: '#FFFFFF',\n    padding: '0.5rem'\n  },\n  innerContainer: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n  },\n  optionsBar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end'\n  }\n};\n\nexport default class ResourceListItemDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.innerContainer}>\n          <h1>Resource Details/ schedule</h1>\n          <p>Details text, schedule etc...</p>\n\n          <div style={styles.optionsBar}>\n            <button onClick={() => this.handleClick('You clicked the button!')}>Admin Panel!</button>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst MUIstyles = theme => ({\n  chip: {\n    marginRight: 4,\n    border: '1px solid #4b96f1',\n    backgroundColor: 'transparent',\n    color: '#3d7ac4',\n    height: '1.5rem'\n  },\n});\n\nconst NewChip = ({ text, classes }) => (\n  <Chip label={text} className={classes.chip} />\n);\n\nexport default withStyles(MUIstyles)(NewChip);\n","import React from 'react';\nimport ResourceListItemDetails from './resourcelistitemdetails';\nimport Chip from './chip';\n\nconst LIST_BLUE = '#eceef9';\nconst LIST_WHITE = '#FFFFFF';\n\nconst styles = {\n  container: (isOdd, isExpanded) => ({\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n    height: isExpanded ? '16rem' : '8rem',\n    backgroundColor: isOdd ? LIST_BLUE : LIST_WHITE,\n    transition: 'all 0.05s ease-in-out'\n  }),\n  thumbnail: {\n    width: '8rem',\n    height: '100%',\n    backgroundColor: '#c1c1c1'\n  },\n\n  innerContainer: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n\n  // Body Styles\n  body: {\n    display: 'flex',\n    flexFlow: 'column',\n    height: '100%',\n    width: '100%',\n    padding: '0.5rem'\n  },\n  title: {\n    fontSize: '12pt',\n    marginBottom: 4,\n  },\n  types: {\n    fontStyle: 'italic',\n    fontSize: '10pt',\n    marginBottom: 4,\n  },\n  description: {\n    fontSize: '10pt',\n    fontStyle: 'italic',\n    marginBottom: 4,\n  },\n\n  bodyControlBar: {\n    display: 'flex',\n    height: '1rem',\n    justifyContent: 'flex-end'\n  },\n\n  // labels\n  vacancy: (status) => ({\n    display: 'flex',\n    flexFlow: 'row',\n    color: (status === 'FULL') ? 'red' : 'green'\n  }),\n  label: {\n    fontSize: '10pt'\n  }\n};\n\nconst MOCK_ITEM_DETAILS = {\n  phone: \"(604) 827-2584\",\n  schedule:[\n    \"Monday: 9:00 AM – 4:00 PM\",\n    \"Tuesday: 9:00 AM – 4:00 PM\",\n    \"Wednesday: 9:00 AM – 4:00 PM\",\n    \"Thursday: 9:00 AM – 4:00 PM\",\n    \"Friday: 9:00 AM – 4:00 PM\",\n    \"Saturday: Closed\",\n    \"Sunday: Closed\"\n  ],\n  website: \"http://pharmsci.ubc.ca/pharmacists-clinic\",\n};\n\n\nexport default class ResourceListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      phone: \"(604) 827-2584\",\n      schedule:[\n        \"Monday: 9:00 AM – 4:00 PM\",\n        \"Tuesday: 9:00 AM – 4:00 PM\",\n        \"Wednesday: 9:00 AM – 4:00 PM\",\n        \"Thursday: 9:00 AM – 4:00 PM\",\n        \"Friday: 9:00 AM – 4:00 PM\",\n        \"Saturday: Closed\",\n        \"Sunday: Closed\"\n      ],\n      website: \"http://pharmsci.ubc.ca/pharmacists-clinic\"\n    };\n\n    this.getLabel = this.getLabel.bind(this);\n    this.handleExpand = this.handleExpand.bind(this);\n  }\n\n  handleExpand(isExpanded) {\n    // TODO: add api call for details here and set state\n    this.setState({ isExpanded: !isExpanded });\n  }\n\n  getLabel() {\n    const { infoTag } = this.props;\n\n    return {\n      VACANCY: <span style={styles.vacancy(infoTag.label)}><p style={styles.label}>{infoTag.label} {infoTag.value}</p></span>\n    }[infoTag.type]\n  }\n\n  render() {\n    const {\n      index,\n      name,\n      icon,\n      address,\n      openingHours,\n      types,\n      infoTag\n    }  = this.props;\n\n    return (\n      <div style={styles.container(index % 2, this.state.isExpanded)} onClick={() => this.handleExpand(this.state.isExpanded)}>\n        <div style={styles.innerContainer}>\n          <div style={styles.thumbnail}>\n            logo goes here\n          </div>\n          <div style={styles.body}>\n            <h3 style={styles.title}>{name}</h3>\n            <div style={styles.types}>{\n              types.slice(0, 3).map((type, id) => <Chip key={id} text={type}/>)\n            }</div>\n            <p style={styles.description}>{address}</p>\n            <div style={styles.bodyControlBar}>\n              {this.getLabel()}\n            </div>\n          </div>\n        </div>\n\n        {this.state.isExpanded && <ResourceListItemDetails index={index} />}\n      </div>\n    )\n  }\n}\n","import './resourcelist.css';\nimport React from 'react';\nimport { List } from 'semantic-ui-react';\nimport ResourceListItem from './resourcelistitem';\nimport {MapsRequestHandler} from '../Maps/maps';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column',\n    flex: 'none',\n    width: '100%',\n    height: '100%'\n  },\n  scrollContainer: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n    height: 'min-content'\n  },\n  listItem: {\n    padding: 0\n    // borderBottom: '1px solid #c1c1c1'\n  }\n};\n\nconst requestTypes = {\n  SHELTER: \"shelter\",\n  SAFE_INJECTION_SITE: \"safe%20injection%20site\",\n  PHARMACY: \"pharmacy\",\n  HOSPITAL: \"hospital\"\n};\n\n\nconst MOCK_INFOTAG = { type: 'VACANCY', label: 'VACANT', value: '132/200' };\n\nconst MOCK_ITEM = {\n  name: \"Shoppers Drug Mart\",\n  icon: \"https://maps.gstatic.com/mapfiles/place_api/icons/shopping-71.png\",\n  formatted_address: \"Dentistry Bldg, 5940 University Blvd, Vancouver, BC V6T 1Z3, Canada\",\n  opening_hours: {\n    open_now: true\n  },\n  types: [\n    \"pharmacy\",\n    \"store\",\n    \"health\",\n    \"point_of_interest\",\n    \"establishment\"\n  ],\n  infoTag: MOCK_INFOTAG\n};\nconst MOCK_ITEMS = [\n  MOCK_ITEM,\n  MOCK_ITEM,\n  MOCK_ITEM,\n  MOCK_ITEM\n];\n\nconst MOCK_DATA = [\n  { title: 'TEST1', description: 'test1', infoTag: MOCK_INFOTAG },\n  { title: 'TEST2', description: 'test2', infoTag: MOCK_INFOTAG },\n  { title: 'TEST3', description: 'test3', infoTag: MOCK_INFOTAG },\n  { title: 'TEST1', description: 'test1', infoTag: MOCK_INFOTAG },\n  { title: 'TEST2', description: 'test2', infoTag: MOCK_INFOTAG },\n  { title: 'TEST3', description: 'test3', infoTag: MOCK_INFOTAG },\n  { title: 'TEST1', description: 'test1', infoTag: MOCK_INFOTAG },\n  { title: 'TEST2', description: 'test2', infoTag: MOCK_INFOTAG },\n  { title: 'TEST3', description: 'test3', infoTag: MOCK_INFOTAG },\n  { title: 'TEST1', description: 'test1', infoTag: MOCK_INFOTAG },\n  { title: 'TEST2', description: 'test2', infoTag: MOCK_INFOTAG },\n  { title: 'TEST3', description: 'test3', infoTag: MOCK_INFOTAG },\n];\n\n\nexport default class ResourceList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lat: 49.267940,\n      lon: -123.247360,\n      data: []\n    };\n\n    this.queryNearbyResources = this.queryNearbyResources.bind(this);\n    this.setLocation = this.setLocation.bind(this);\n  }\n\n  getLocation() {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          resolve(position);\n        }, () => {\n          reject(\"Geolocation is not supported by this browser.\");\n        });\n      } else {\n        reject(\"Geolocation is not supported by this browser.\");\n      }\n    })\n  }\n\n  setLocation(position) {\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    this.setState({ lat, lon });\n  }\n\n  async queryNearbyResources() {\n    // TODO: here, we should call handleGetPlacesQuery() with a proper lat, lng, and request type.\n    let queryResponse = await MapsRequestHandler.handleGetPlacesQuery(this.state.lat, this.state.lon, requestTypes.SAFE_INJECTION_SITE);\n    console.log('resources are ', queryResponse);\n    this.setState({ data: queryResponse });\n  }\n\n  componentDidMount() {\n    this.getLocation()\n      .then(this.setLocation);\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.scrollContainer}>\n          <List celled>\n            {MOCK_ITEMS.map((item, id) => (\n              <List.Item key={id} style={styles.listItem}>\n                <List.Content>\n                  <ResourceListItem\n                    index={id}\n                    name={item.name}\n                    icon={item.icon}\n                    address={item.formatted_address}\n                    openingHours={item.opening_hours}\n                    types={item.types}\n                    infoTag={item.infoTag}\n                  />\n                </List.Content>\n              </List.Item>\n            ))}\n          </List>\n        </div>\n      </div>\n    )\n  }\n}\n","import './home.css';\nimport React from 'react';\nimport { NavBar, ResourceList } from '../components';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column'\n  }\n};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <NavBar />\n        <ResourceList />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Navbar from '../components/NavBar/navbar';\nconst firebase = require('firebase/app');\nrequire('firebase/database');\nconst styles = {\n    container: {\n        display: 'flex',\n        flexFlow: 'column',\n        width: '100%',\n        height: '100%'\n    }\n};\n\nexport default class Admin extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n\n        const config = {\n            apiKey: \"AIzaSyCNmaSPCktKr5T-Stq6mL3wlnIuJ9xD-Ss\",\n            authDomain: \"bcs-hackathon-2019.firebaseapp.com\",\n            databaseURL: \"https://bcs-hackathon-2019.firebaseio.com\",\n            projectId: \"bcs-hackathon-2019\",\n            storageBucket: \"bcs-hackathon-2019.appspot.com\",\n            messagingSenderId: \"473934570743\"\n        };\n        firebase.initializeApp(config);\n        this.firebase = firebase;\n        this.db = firebase.database();\n    }\n\n    handleClick(text) {\n        this.setState({text: text});\n\n        // firebase.database().ref('Shelters/Shelter2').set({\n        //     username: \"name\",\n        //     email: \"email\",\n        //     profile_picture : \"imageUrl\"\n        // });\n\n        this.firebase.database().ref('/Shelters/Shelter1').once('value').then((res) => {\n            console.log('Shelter name:', res.name);\n            console.log('Shelter location:', res.location);\n            console.log('Shelter capacity:', res.capacity);\n            console.log('Current number of occupants:', res.occupants);\n        });\n\n    }\n\n    render() {\n        return (\n            <div style={styles.container}>\n                <Navbar/>\n                <h1>Admin Page</h1>\n                <button onClick={() => this.handleClick()}>Click me!</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport history from './history';\n\nimport Home from './home/home';\nimport Admin from './admin/admin';\nimport Maps from './components/Maps/maps';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column'\n  }\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Route exact path={\"/\"} component={Home}/>\n          <Route exact path={\"/admin\"} component={Admin}/>\n        </Router>\n        <Maps />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}