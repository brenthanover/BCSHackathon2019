{"version":3,"sources":["assets/home_white.svg","history.js","components/GPS/gps.js","components/NFC/nfc.js","components/Maps/maps.js","components/NavBar/navbar.js","components/ResourceList/resourcelistitemdetails.js","components/ResourceList/chip.js","components/ResourceList/resourcelistitem.js","components/ResourceList/resourcelist.js","home/home.js","admin/admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","React","Component","port","process","PORT","console","log","HttpClient","this","post","aUrl","queryPath","aCallback","anHttpRequest","XMLHttpRequest","onreadystatechange","readyState","status","responseText","data","open","setRequestHeader","send","JSON","stringify","MapsApiKey","Object","classCallCheck","MAPS_API_KEY","MapsRequestHandler","createClass","key","value","_handleGetPlacesQuery","asyncToGenerator","regenerator_default","a","mark","_callee3","lat","lng","requestType","httpClient","_this","wrap","_context3","prev","next","buildGetPlacesQuery","response","concat","abrupt","stop","_x3","_x4","_x5","apply","arguments","toString","_handleGetPlaceDetails","_callee4","placeId","_context4","buildGetPlaceDetailsQuery","_x6","placeid","lat1","lng1","lat2","lng2","Math","PI","deltaLon","deltaLat","sin","cos","atan2","sqrt","styles","container","display","width","height","backgroundColor","padding","fill","title","color","logo","marginRight","marginLeft","path","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","state","text","handleClick","bind","assertThisInitialized","setState","react_default","createElement","style","src","Home","alt","className","onClick","history","push","flex","innerContainer","flexFlow","optionsBar","justifyContent","ResourceListItemDetails","_this2","_this$props","phone","website","schedule","withStyles","theme","chip","border","_ref","classes","Chip_default","label","isOdd","isExpanded","minHeight","transition","thumbnail","body","fontSize","marginBottom","types","fontStyle","description","bodyControlBar","vacancy","ResourceListItem","formatData","getLabel","handleExpand","handleIndividualPlaceClick","place_id","handleGetPlaceDetails","queryResponse","parse","result","formatted_phone_number","opening_hours","weekday_text","infoTag","VACANCY","type","index","name","address","icon","openingHours","slice","map","id","resourcelistitemdetails_ResourceListItemDetails","scrollContainer","listItem","MOCK_INFOTAG","ResourceList","lon","queryNearbyResources","setLocation","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","handleGetPlacesQuery","ret","i","results","length","resultObj","formatted_address","then","List","celled","item","Item","Content","resourcelistitem_ResourceListItem","navbar_Navbar","resourcelist_ResourceList","firebase","require","Admin","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","ref","once","res","location","capacity","occupants","App","react_router","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0055ad2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_white.a4cfe33e.svg\";","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n})\n","import React from 'react';\n\nexport default class GPS extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: 'Go click the button!',\n            lat: undefined,\n            lon: undefined,\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.setLocation = this.setLocation.bind(this);\n    }\n\n    handleClick() {\n        this.getLocation()\n            .then(this.setLocation);\n    }\n\n    getLocation() {\n        return new Promise((resolve, reject) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    resolve(position);\n                }, () => {\n                    reject(\"Geolocation is not supported by this browser.\");\n                });\n            } else {\n                reject(\"Geolocation is not supported by this browser.\");\n            }\n        })\n    }\n\n    setLocation(position) {\n        let text = \"Here's your location: \";\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n        this.setState({text, lat, lon});\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>GPS Page</h1>\n                <button onClick={() => this.handleClick()}>Click me!</button>\n                <p>Text: {this.state.text}</p>\n                <p>Lat: {this.state.lat}</p>\n                <p>Lon: {this.state.lon}</p>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class NFC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>NFC Page</h1>\n        <button onClick={() => this.handleClick('You clicked the button!')}>Click me!</button>\n        <p>Text: {this.state.text}</p>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\n// const ROOT_URL = \"http://localhost:8080\";\nconst ROOT_URL = \"\";\nconst port = process.env.PORT || 8080;\nconsole.log('debug: ', port);\n\n/*\nconst requestTypes = {\n  SHELTER: \"shelter\",\n  SAFE_INJECTION_SITE: \"safe%20injection%20site\",\n  PHARMACY: \"pharmacy\",\n  HOSPITAL: \"hospital\",\n  FINANCIAL: \"financial\",\n  LEGAL: \"legal\",\n  FOOD: \"food\",\n};\n*/\n\nconst relevantPlaceTypes = \"(shelter)+OR+(injection)+OR+(pharmacy)+OR+(hospital)+OR+(financial)+OR+(legal)+OR+(food)+OR+(addiction)+OR+(recovery)+OR+(survivor)+OR+(healing)+OR+(health)\";\nconst RADIUS_OF_EARTH = 6371000;   // radius of earth in metres\n\nlet HttpClient = function() {\n  this.post = function(aUrl, queryPath, aCallback) {\n    let anHttpRequest = new XMLHttpRequest();\n    anHttpRequest.onreadystatechange = function() {\n      if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200){\n        aCallback(anHttpRequest.responseText);\n      }\n    };\n\n    let data = {queryPath: queryPath};\n\n    anHttpRequest.open( \"POST\", aUrl, false );\n    anHttpRequest.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    anHttpRequest.send( JSON.stringify(data));\n  }\n};\n\nexport default class Maps extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleIndividualPlaceClick = this.handleIndividualPlaceClick.bind(this);\n  }\n\n  async handleClick(text) {\n    this.setState({ text: text });\n\n    // TODO: here, we should call handleGetPlacesQuery() with a proper lat, lng, and request type.\n    let queryResponse = await MapsRequestHandler.handleGetPlacesQuery(49.267940, -123.247360);\n    console.log(\"Response: \" + queryResponse);\n\n    // This is the response containing the data you want for rendering on the front-end.\n    return queryResponse;\n  }\n\n  async handleIndividualPlaceClick(placeId) {\n\n    // TODO: here, we should call handleGetPlaceDetails() with a proper placeId from our getPlacesQuery.\n    let queryResponse = await MapsRequestHandler.handleGetPlaceDetails(placeId);\n    console.log(\"Response: \" + queryResponse);\n    return queryResponse;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Maps Page</h1>\n        <button onClick={() => this.handleClick('You clicked the button!')}>Get list of nearby places</button>\n        <button onClick={() => this.handleIndividualPlaceClick(\"ChIJv1Ta5shyhlQR_6flUsZ9Vok\")}>Get detailed info for one place</button>\n        <p>Text: {this.state.text}</p>\n      </div>\n    )\n  }\n}\n\nexport class MapsApiKey {\n  static MAPS_API_KEY = \"AIzaSyAsvCrLqQVzefCIIPgvWoVsx_PBpYi8l2c\";\n}\n\nexport class MapsRequestHandler {\n  /**\n   * Given a lat, lng, and requestType (enum): see above, return response.\n   * @param lat\n   * @param lng\n   * @param requestType\n   * @returns {Promise<void>}\n   */\n  static async handleGetPlacesQuery(lat, lng, requestType) {\n    let queryPath = this.buildGetPlacesQuery(lat, lng, requestType);\n    console.log(queryPath, lat, lng);\n\n    let httpClient = new HttpClient();\n    this.response = null;\n    let _this = this;\n\n    await httpClient.post(`${ROOT_URL}/placesRequest`, queryPath, function(response) {\n      // I could work with the result html/json here.  I could also just return it\n      console.log(\"Returning result handleGetPlacesQuery()\");\n      _this.response = response;\n    });\n\n    return _this.response;\n  }\n\n  /**\n   *  Returns the URL required for a \"get places\" query.\n   */\n  static buildGetPlacesQuery(lat, lng) {\n    return \"https://maps.googleapis.com/maps/api/place/textsearch/json\"\n        + \"?query=\" + relevantPlaceTypes\n        + \"&language=en\"\n        + \"&fields=formatted_address,geometry,icon,id,name,permanently_closed,photos,place_id,plus_code,types,user_ratings_total,price_level,rating,opening_hours\"\n        + \"&location=\" + lat.toString() + \",\" + lng.toString()\n        + \"&key=\" + MapsApiKey.MAPS_API_KEY\n        + \"&radius=12000\";\n  }\n\n  /**\n   * Given a placeid (retrieved from a separate \"get places\" query), return contact information for that one place.\n   * @param placeid\n   * @returns {string}\n   */\n  static async handleGetPlaceDetails(placeId) {\n    let queryPath = this.buildGetPlaceDetailsQuery(placeId);\n\n    console.log(queryPath);\n\n    let httpClient = new HttpClient();\n    this.response = null;\n    let _this = this;\n\n    await httpClient.post(`${ROOT_URL}/placeDetailsRequest`, queryPath, function(response) {\n      // I could work with the result html/json here.  I could also just return it\n      console.log(\"Returning result handleGetPlaceDetails()\");\n      _this.response = response;\n    });\n\n    return _this.response;\n  }\n\n  static buildGetPlaceDetailsQuery(placeid) {\n    return \"https://maps.googleapis.com/maps/api/place/details/json\"\n        + \"?key=\" + MapsApiKey.MAPS_API_KEY\n        + \"&placeid=\" + placeid\n        + \"&language=en\"\n        + \"&fields=formatted_phone_number,international_phone_number,opening_hours,website\"\n  }\n\n  /**\n   * Returns distance (in km) between two points represented by lat1,lng1 and lat2,lng2\n   * Implementation from CPSC210 (Paul Carter)\n   * @param lat1\n   * @param lng1\n   * @param lat2\n   * @param lng2\n   * @returns {number}\n   */\n  static distanceBetweenPoints(lat1, lng1, lat2, lng2) {\n    lat1 = lat1 / 180.0 * Math.PI;\n    lat2 = lat2 / 180.0 * Math.PI;\n    const deltaLon = (lng1 - lng2) / 180.0 * Math.PI;\n    const deltaLat = (lat1 - lat2) / 180.0 * Math.PI;\n\n    const a = Math.sin(deltaLat / 2.0) * Math.sin(deltaLat / 2.0)\n        + Math.cos(lat1) * Math.cos(lat2)\n        * Math.sin(deltaLon / 2.0) * Math.sin(deltaLon / 2.0);\n    const c = 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return c * RADIUS_OF_EARTH;\n  }\n}\n","import './navbar.css';\nimport React from 'react';\nimport history from '../../history';\nimport Home from '../../assets/home_white.svg';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    width: '100%',\n    height: 'min-content',\n    backgroundColor: '#428ec1',\n    padding: '0.5rem',\n    fill: '#FFF'\n  },\n  title: {\n    color: '#FFFFFF'\n  },\n  logo: {\n    marginRight: '1rem',\n    marginLeft: '0.5rem',\n    height: '1.5rem',\n    color: '#FFFFFF',\n    fill: '#FFF',\n    path: {\n      fill: '#FFF'\n    }\n  }\n};\n\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Go click the button!'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <img style={styles.logo} src={Home} alt=\"logo\" className=\"home-logo\" />\n        <h1 style={styles.title}>Haven App</h1>\n        <button style={{ height: '2rem' }} onClick={() => history.push('/')}>main</button>\n        <button style={{ height: '2rem' }} onClick={() => history.push('/admin')}>admin</button>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 'none',\n    height: 'min-content',\n    width: '100%',\n    backgroundColor: '#FFFFFF',\n    padding: '0.5rem'\n  },\n  innerContainer: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n  },\n  optionsBar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end'\n  }\n};\n\nexport default class ResourceListItemDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(text) {\n    this.setState({ text: text });\n  }\n\n  render() {\n    const {\n      phone,\n      website,\n      schedule\n    } = this.props;\n\n    return (\n      <div style={styles.container}>\n        <div style={styles.innerContainer}>\n          <h1>Resource Details/ schedule</h1>\n          <p>{phone}</p>\n          <p>{website}</p>\n          <p>{schedule}</p>\n\n          <div style={styles.optionsBar}>\n            <button onClick={() => this.handleClick('You clicked the button!')}>Admin Panel!</button>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst MUIstyles = theme => ({\n  chip: {\n    marginRight: 4,\n    border: '1px solid #4b96f1',\n    backgroundColor: 'transparent',\n    color: '#3d7ac4',\n    height: '1.5rem'\n  },\n});\n\nconst NewChip = ({ text, classes }) => (\n  <Chip label={text} className={classes.chip} />\n);\n\nexport default withStyles(MUIstyles)(NewChip);\n","import React from 'react';\nimport ResourceListItemDetails from './resourcelistitemdetails';\nimport Chip from './chip';\nimport {MapsRequestHandler} from '../Maps/maps';\n\nconst LIST_BLUE = '#eceef9';\nconst LIST_WHITE = '#FFFFFF';\n\nconst styles = {\n  container: (isOdd, isExpanded) => ({\n    display: 'flex',\n    flexFlow: 'column',\n    flex: 'none',\n    width: '100%',\n    // height: ''\n    minHeight: isExpanded ? '20rem' : 'auto',\n    backgroundColor: isOdd ? LIST_BLUE : LIST_WHITE,\n    transition: 'all 0.05s ease-in-out'\n  }),\n  thumbnail: {\n    width: '8rem',\n    height: '100%',\n    backgroundColor: '#c1c1c1'\n  },\n\n  innerContainer: {\n    display: 'flex',\n    flex: 'none',\n    width: '100%',\n    height: 'min-content',\n  },\n\n  // Body Styles\n  body: {\n    display: 'flex',\n    flexFlow: 'column',\n    height: '100%',\n    width: '100%',\n    padding: '0.5rem'\n  },\n  title: {\n    fontSize: '12pt',\n    marginBottom: 4,\n  },\n  types: {\n    fontStyle: 'italic',\n    fontSize: '10pt',\n    marginBottom: 4,\n  },\n  description: {\n    fontSize: '10pt',\n    fontStyle: 'italic',\n    marginBottom: 4,\n  },\n\n  bodyControlBar: {\n    display: 'flex',\n    height: '1rem',\n    justifyContent: 'flex-end'\n  },\n\n  // labels\n  vacancy: (status) => ({\n    display: 'flex',\n    flexFlow: 'row',\n    color: (status === 'FULL') ? 'red' : 'green'\n  }),\n  label: {\n    fontSize: '10pt'\n  }\n};\n\nconst MOCK_ITEM_DETAILS = {\n  phone: \"(604) 827-2584\",\n  schedule:[\n    \"Monday: 9:00 AM – 4:00 PM\",\n    \"Tuesday: 9:00 AM – 4:00 PM\",\n    \"Wednesday: 9:00 AM – 4:00 PM\",\n    \"Thursday: 9:00 AM – 4:00 PM\",\n    \"Friday: 9:00 AM – 4:00 PM\",\n    \"Saturday: Closed\",\n    \"Sunday: Closed\"\n  ],\n  website: \"http://pharmsci.ubc.ca/pharmacists-clinic\",\n};\n\n\nexport default class ResourceListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      phone: \"(604) 827-2584\",\n      schedule:[\n        \"Monday: 9:00 AM – 4:00 PM\",\n        \"Tuesday: 9:00 AM – 4:00 PM\",\n        \"Wednesday: 9:00 AM – 4:00 PM\",\n        \"Thursday: 9:00 AM – 4:00 PM\",\n        \"Friday: 9:00 AM – 4:00 PM\",\n        \"Saturday: Closed\",\n        \"Sunday: Closed\"\n      ],\n      website: \"http://pharmsci.ubc.ca/pharmacists-clinic\"\n    };\n\n    this.formatData = this.formatData.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.handleExpand = this.handleExpand.bind(this);\n    this.handleIndividualPlaceClick = this.handleIndividualPlaceClick.bind(this);\n  }\n\n  async handleIndividualPlaceClick(isExpanded) {\n    // TODO: here, we should call handleGetPlaceDetails() with a proper placeId from our getPlacesQuery.\n    const { place_id } = this.props;\n    let queryResponse = await MapsRequestHandler.handleGetPlaceDetails(place_id);\n    console.log(\"Response: \" + queryResponse);\n    this.setState({ data: this.formatData(JSON.parse(queryResponse).data) });\n    this.setState({ isExpanded: !isExpanded });\n    return queryResponse;\n  }\n\n  /**\n   * Formats data from queryNearbyResources() to a more flattened structure\n   * ASSUME: data is from a successful response\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    console.log('data is ', data);\n    let resultObj = {\n      isExpanded: true,\n      phone: data.result.formatted_phone_number,\n      schedule: data.result.opening_hours ? data.result.opening_hours.weekday_text : 'Hours unavailable',\n      website: data.result.website\n    };\n    return resultObj\n  }\n\n  handleExpand(isExpanded) {\n    // TODO: add api call for details here and set state\n    this.handleIndividualPlaceClick(isExpanded);\n      // .then(() => this.setState({ isExpanded: !isExpanded }))\n      // .catch(() => this.setState({ isExpanded: false }));\n  }\n\n  getLabel() {\n    const { infoTag } = this.props;\n\n    return {\n      VACANCY: <span style={styles.vacancy(infoTag.label)}><p style={styles.label}>{infoTag.label} {infoTag.value}</p></span>\n    }[infoTag.type]\n  }\n\n  render() {\n    const {\n      index,\n      name,\n      icon,\n      address,\n      openingHours,\n      types,\n      infoTag\n    }  = this.props;\n\n    return (\n      <div style={styles.container(index % 2, this.state.isExpanded)} onClick={() => this.handleExpand(this.state.isExpanded)}>\n        <div style={styles.innerContainer}>\n          <div style={styles.thumbnail}>\n            logo goes here\n          </div>\n          <div style={styles.body}>\n            <h3 style={styles.title}>{name}</h3>\n            <div style={styles.types}>{\n              types.slice(0, 3).map((type, id) => <Chip key={id} text={type}/>)\n            }</div>\n            <p style={styles.description}>{address}</p>\n            <div style={styles.bodyControlBar}>\n              {this.getLabel()}\n            </div>\n          </div>\n        </div>\n\n        {this.state.isExpanded && <ResourceListItemDetails\n          schedule={this.state.schedule}\n          phone={this.state.phone}\n          website={this.state.website}\n          index={index} />}\n      </div>\n    )\n  }\n}\n","import './resourcelist.css';\nimport React from 'react';\nimport { List } from 'semantic-ui-react';\nimport ResourceListItem from './resourcelistitem';\nimport {MapsRequestHandler} from '../Maps/maps';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column',\n    flex: 'none',\n    width: '100%',\n    height: '100%'\n  },\n  scrollContainer: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '100%',\n    height: 'min-content'\n  },\n  listItem: {\n    padding: 0\n    // borderBottom: '1px solid #c1c1c1'\n  }\n};\n\nconst MAX_ITEMS = 6;\n\nconst requestTypes = {\n  SHELTER: \"shelter\",\n  SAFE_INJECTION_SITE: \"safe%20injection%20site\",\n  PHARMACY: \"pharmacy\",\n  HOSPITAL: \"hospital\"\n};\n\nconst relevantPlaceTypes = \"(shelter)+OR+(injection)+OR+(pharmacy)+OR+(hospital)+OR+(financial)+OR+(legal)+OR+(food)+OR+(addiction)+OR+(recovery)+OR+(survivor)+OR+(healing)+OR+(health)\";\nconst RADIUS_OF_EARTH = 6371000;   // radius of earth in metres\n\nconst MOCK_INFOTAG = { type: 'VACANCY', label: 'VACANT', value: '132/200' };\n\nconst MOCK_ITEMS = [\n  {\n    name: \"Shoppers Drug Mart\",\n    icon: \"https://maps.gstatic.com/mapfiles/place_api/icons/shopping-71.png\",\n    formatted_address: \"Dentistry Bldg, 5940 University Blvd, Vancouver, BC V6T 1Z3, Canada\",\n    opening_hours: {\n      open_now: true\n    },\n    types: [\n      \"pharmacy\",\n      \"store\",\n      \"health\",\n      \"point_of_interest\",\n      \"establishment\"\n    ],\n    infoTag: MOCK_INFOTAG\n  }\n];\n\nexport default class ResourceList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lat: 49.267940,\n      lon: -123.247360,\n      data: []\n    };\n\n    this.queryNearbyResources = this.queryNearbyResources.bind(this);\n    this.setLocation = this.setLocation.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.formatData = this.formatData.bind(this);\n  }\n\n  getLocation() {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          resolve(position);\n        }, () => {\n          console.log('error1');\n          reject(\"Geolocation is not supported by this browser.\");\n        });\n      } else {\n        console.log('error2');\n        reject(\"Geolocation is not supported by this browser.\");\n      }\n    })\n  }\n\n  setLocation(position) {\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    this.setState({ lat, lon });\n  }\n\n  async queryNearbyResources() {\n    // TODO: here, we should call handleGetPlacesQuery() with a proper lat, lng, and request type.\n    let queryResponse = await MapsRequestHandler.handleGetPlacesQuery(this.state.lat, this.state.lon);\n    console.log('resources are ', queryResponse);\n    this.setState({ data: this.formatData(JSON.parse(queryResponse).data) });\n    return this.formatData(JSON.parse(queryResponse).data);\n  }\n\n  /**\n   * Formats data from queryNearbyResources() to a more flattened structure\n   * ASSUME: data is from a successful response\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    let ret = [];\n    for (let i = 0; i < data.results.length; ++i) {\n      let result = data.results[i];\n      let resultObj = {\n        name: result.name,\n        icon: result.icon,\n        formatted_address: result.formatted_address,\n        opening_hours: result.opening_hours,\n        types: result.types,\n        place_id: result.place_id,\n        infoTag: MOCK_INFOTAG\n      };\n      ret.push(resultObj);\n    }\n    return ret;\n  }\n\n  /**\n   * Returns distance (in km) between two points represented by lat1,lng1 and lat2,lng2\n   * Implementation from CPSC210 (Paul Carter)\n   * @param lat1\n   * @param lng1\n   * @param lat2\n   * @param lng2\n   * @returns {number}\n   */\n  static distanceBetweenPoints(lat1, lng1, lat2, lng2) {\n    lat1 = lat1 / 180.0 * Math.PI;\n    lat2 = lat2 / 180.0 * Math.PI;\n    const deltaLon = (lng1 - lng2) / 180.0 * Math.PI;\n    const deltaLat = (lat1 - lat2) / 180.0 * Math.PI;\n\n    const a = Math.sin(deltaLat / 2.0) * Math.sin(deltaLat / 2.0)\n      + Math.cos(lat1) * Math.cos(lat2)\n      * Math.sin(deltaLon / 2.0) * Math.sin(deltaLon / 2.0);\n    const c = 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return c * RADIUS_OF_EARTH;\n  }\n\n  componentDidMount() {\n    console.log('mounted');\n    this.getLocation()\n      .then(this.setLocation)\n      .then(this.queryNearbyResources);\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.scrollContainer}>\n          <List celled>\n            {this.state.data.slice(0, MAX_ITEMS).map((item, id) => (\n              <List.Item key={id} style={styles.listItem}>\n                <List.Content>\n                  <ResourceListItem\n                    index={id}\n                    name={item.name}\n                    icon={item.icon}\n                    address={item.formatted_address}\n                    openingHours={item.opening_hours}\n                    types={item.types}\n                    place_id={item.place_id}\n                    infoTag={item.infoTag}\n                  />\n                </List.Content>\n              </List.Item>\n            ))}\n          </List>\n        </div>\n      </div>\n    )\n  }\n}\n","import './home.css';\nimport React from 'react';\nimport { NavBar, ResourceList } from '../components';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column'\n  }\n};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <NavBar />\n        <ResourceList />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Navbar from '../components/NavBar/navbar';\nconst firebase = require('firebase/app');\nrequire('firebase/database');\nconst styles = {\n    container: {\n        display: 'flex',\n        flexFlow: 'column',\n        width: '100%',\n        height: '100%'\n    }\n};\n\nexport default class Admin extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n\n        const config = {\n            apiKey: \"AIzaSyCNmaSPCktKr5T-Stq6mL3wlnIuJ9xD-Ss\",\n            authDomain: \"bcs-hackathon-2019.firebaseapp.com\",\n            databaseURL: \"https://bcs-hackathon-2019.firebaseio.com\",\n            projectId: \"bcs-hackathon-2019\",\n            storageBucket: \"bcs-hackathon-2019.appspot.com\",\n            messagingSenderId: \"473934570743\"\n        };\n        firebase.initializeApp(config);\n        this.firebase = firebase;\n        this.db = firebase.database();\n    }\n\n    handleClick(text) {\n        this.setState({text: text});\n\n        // firebase.database().ref('Shelters/Shelter2').set({\n        //     username: \"name\",\n        //     email: \"email\",\n        //     profile_picture : \"imageUrl\"\n        // });\n\n        this.firebase.database().ref('/Shelters/Shelter1').once('value').then((res) => {\n            console.log('Shelter name:', res.name);\n            console.log('Shelter location:', res.location);\n            console.log('Shelter capacity:', res.capacity);\n            console.log('Current number of occupants:', res.occupants);\n        });\n\n    }\n\n    render() {\n        return (\n            <div style={styles.container}>\n                <Navbar/>\n                <h1>Admin Page</h1>\n                <button onClick={() => this.handleClick()}>Click me!</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport history from './history';\n\nimport Home from './home/home';\nimport Admin from './admin/admin';\nimport Maps from './components/Maps/maps';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexFlow: 'column'\n  }\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Route exact path={\"/\"} component={Home}/>\n          <Route exact path={\"/admin\"} component={Admin}/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}